/*
 * Jaffas and more!
 * author: monnef
 */

package monnef.jaffas.power.client;
// Date: 07/03/2013 21:50:19
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelLightningConductor extends ModelBase {
    //fields
    ModelRenderer Base;
    ModelRenderer Rod;
    ModelRenderer RodBase;

    public ModelLightningConductor() {
        textureWidth = 64;
        textureHeight = 64;

        Base = new ModelRenderer(this, 0, 0);
        Base.addBox(0F, 0F, 0F, 5, 1, 5);
        Base.setRotationPoint(-2.5F, 23F, -2.5F);
        Base.setTextureSize(64, 64);
        Base.mirror = true;
        setRotation(Base, 0F, 0F, 0F);
        Rod = new ModelRenderer(this, 21, 0);
        Rod.addBox(0F, 0F, 0F, 1, 15, 1);
        Rod.setRotationPoint(-0.5F, 8F, -0.5F);
        Rod.setTextureSize(64, 64);
        Rod.mirror = true;
        setRotation(Rod, 0F, 0F, 0F);
        RodBase = new ModelRenderer(this, 26, 0);
        RodBase.addBox(0F, 0F, 0F, 1, 1, 1);
        RodBase.setRotationPoint(-0.5F, 23F, -0.5F);
        RodBase.setTextureSize(64, 64);
        RodBase.mirror = true;
        setRotation(RodBase, 0F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        render(f5);
    }

    public void render(float f5) {
        Base.render(f5);
        Rod.render(f5);
        //RodBase.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    @Override
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
    }

}
